//     BackboneUiDraggable
//     (c) simonfan
//     BackboneUiDraggable is licensed under the MIT terms.

define(["require","exports","module","lowercase-backbone","model-dock","lodash","jquery","./__backbone-ui-draggable/helpers","./__backbone-ui-draggable/when","./__backbone-ui-draggable/animate","./__backbone-ui-draggable/value-position","./__backbone-ui-draggable/movement","./__backbone-ui-draggable/event-handlers"],function(e,t,n){var r=e("lowercase-backbone"),i=e("model-dock"),s=e("lodash"),o=e("jquery"),u=e("./__backbone-ui-draggable/helpers"),a=n.exports=i.extend({initialize:function(t){r.view.prototype.initialize.call(this,t),this.initializeModelDock(t),this.initializeUIDraggable(t)},initializeUIDraggable:function(t){s.bindAll(this,"mousedown","mousemove","mouseup"),this.$el.addClass(this.draggableClass),this.$window=o(window),this.$canvas=t.canvas||this.canvas||this.$el.parent();var n=this.$el.position(),r=o.extend({status:"stopped",disabled:!1,top:parseFloat(n.top),left:parseFloat(n.left)},t),i=this.model;i.set(r),this.listenTo(i,"change:disabled",function(e){e.get("disabled")?this.$el.removeClass(this.draggableClass+"-enabled").addClass(this.draggableClass+"-disabled"):this.$el.removeClass(this.draggableClass+"-disabled").addClass(this.draggableClass+"-enabled")}),this.initializeDraggableValuePosition(t)},draggableClass:"draggable",events:{mousedown:"mousedown"},when:e("./__backbone-ui-draggable/when"),animate:e("./__backbone-ui-draggable/animate"),disableDraggable:function(){this.model.set("disabled",!0)},enableDraggable:function(){this.model.set("disabled",!1)},axis:"xy",map:{left:"->css:left",top:"->css:top"},stringifiers:{left:u.stringifyPositionalValue,top:u.stringifyPositionalValue}});a.proto(e("./__backbone-ui-draggable/value-position")),a.proto(e("./__backbone-ui-draggable/movement")),a.proto(e("./__backbone-ui-draggable/event-handlers"))});